{"version":3,"sources":["webpack:///./src/app/checkout/address/address.module.ts","webpack:///./src/app/checkout/address/address.page.html","webpack:///./src/app/checkout/address/address.page.scss","webpack:///./src/app/checkout/address/address.page.ts"],"names":[],"mappings":"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","file":"checkout-address-address-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CheckoutAddressPage } from './address.page';\nimport { KeysPipeModule } from '../../pipes/pipe.module';\nimport { TranslateModule } from '@ngx-translate/core';\nconst routes: Routes = [\n  {\n    path: '',\n    component: CheckoutAddressPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    FormsModule,\n    IonicModule,\n    KeysPipeModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CheckoutAddressPage]\n})\nexport class CheckoutAddressPageModule {}\n","module.exports = \"<ion-header mode='ios'>\\n    <ion-toolbar color=\\\"{{settings.theme.header}}\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button defaultHref=\\\"/tabs/cart\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>{{\\\"Address\\\" | translate}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n    <div class=\\\"spinner\\\" *ngIf=\\\"loader\\\">\\n        <ion-spinner> </ion-spinner>\\n    </div>\\n\\n    <div *ngIf=\\\"!loader\\\">\\n        <ion-list no-margin>\\n\\n            <ion-list-header>\\n                <ion-label>{{\\\"Billing Address\\\" | translate}}</ion-label>\\n            </ion-list-header>\\n\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">{{\\\"First Name\\\" | translate}}</ion-label>\\n                <ion-input required type=\\\"text\\\" [(ngModel)]=\\\"checkoutData.form.billing_first_name\\\" name=\\\"firstname\\\">\\n                </ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">{{\\\"Last Name\\\" | translate}}</ion-label>\\n                <ion-input required type=\\\"text\\\" [(ngModel)]=\\\"checkoutData.form.billing_last_name\\\" name=\\\"lastname\\\">\\n                </ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">{{\\\"Phone\\\" | translate}}</ion-label>\\n                <ion-input required type=\\\"text\\\" [(ngModel)]=\\\"checkoutData.form.billing_phone\\\" name=\\\"telephone\\\">\\n                </ion-input>\\n            </ion-item>\\n            <ion-item style=\\\"display: none;\\\">\\n                <ion-label position=\\\"stacked\\\">{{\\\"Company\\\" | translate}}</ion-label>\\n                <ion-input required type=\\\"text\\\" value='none' [(ngModel)]=\\\"checkoutData.form.billing_company\\\"\\n                    name=\\\"company\\\"> </ion-input>\\n            </ion-item>\\n            <ion-item >\\n                <ion-label position=\\\"stacked\\\">{{\\\"Street Address\\\" | translate}}</ion-label>\\n                <ion-input required type=\\\"text\\\"  [(ngModel)]=\\\"checkoutData.form.billing_address_1\\\"\\n                    name=\\\"street1\\\"> </ion-input>\\n            </ion-item>\\n            <ion-item style=\\\"display: none;\\\">\\n                <ion-label position=\\\"stacked\\\">{{\\\"Street Address\\\" | translate}} 2</ion-label>\\n                <ion-input required type=\\\"text\\\" value='none' [(ngModel)]=\\\"checkoutData.form.billing_address_2\\\"\\n                    name=\\\"street2\\\">\\n                </ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">{{\\\"Email\\\" | translate}}</ion-label>\\n                <ion-input required type=\\\"email\\\" [(ngModel)]=\\\"checkoutData.form.billing_email\\\" name=\\\"email\\\">\\n                </ion-input>\\n            </ion-item>\\n            <ion-item style=\\\"display: none;\\\">\\n                <ion-label position=\\\"stacked\\\">{{\\\"City\\\" | translate}}</ion-label>\\n                <ion-input required type=\\\"text\\\" value='none' [(ngModel)]=\\\"checkoutData.form.billing_city\\\" name=\\\"city\\\">\\n                </ion-input>\\n            </ion-item>\\n\\n            <ion-item style=\\\"display: none;\\\">\\n                <ion-label position=\\\"stacked\\\">{{\\\"Postcode\\\" | translate}}</ion-label>\\n                <ion-input required type=\\\"text\\\" value='00000' [(ngModel)]=\\\"checkoutData.form.billing_postcode\\\"\\n                    name=\\\"postcode\\\">\\n                </ion-input>\\n            </ion-item>\\n\\n\\n            <ion-item *ngIf=\\\"countries?.options\\\">\\n                <ion-label>{{\\\"Country\\\" | translate}}</ion-label>\\n                <ion-select [(ngModel)]=\\\"checkoutData.form.billing_country\\\"  (ngModelChange)=\\\"getBillingRegion()\\\"\\n                    name=\\\"billing_country\\\">\\n                    <div *ngFor=\\\"let field of countries.options | keys\\\">\\n                        <ion-select-option *ngIf=\\\"field.key == 'OM' \\\"  value=\\\"{{field.key}}\\\"><span [innerHTML]=\\\"field.value\\\"></span>\\n                        </ion-select-option>\\n                    </div>\\n                </ion-select>\\n            </ion-item>\\n\\n            <div *ngIf=\\\"checkoutData.form?.billing_country\\\">\\n                <ion-item *ngIf=\\\"checkoutData.billingStates\\\">\\n                    <ion-label>{{\\\"State\\\" | translate}}</ion-label>\\n                    <ion-select [(ngModel)]=\\\"checkoutData.form.billing_state\\\" name=\\\"billing_state\\\">\\n                        <div *ngFor=\\\"let field of checkoutData.billingStates | keys\\\">\\n                            <ion-select-option value=\\\"{{field.key}}\\\"><span [innerHTML]=\\\"field.value\\\"></span>\\n                            </ion-select-option>\\n                        </div>\\n                    </ion-select>\\n                </ion-item>\\n\\n\\n                <ion-item *ngIf=\\\"!checkoutData.billingStates\\\" style=\\\"display: none;\\\">\\n                    <ion-label position=\\\"stacked\\\">{{\\\"State\\\" | translate}}</ion-label>\\n                    <ion-input required type=\\\"text\\\"  [(ngModel)]=\\\"checkoutData.form.billing_state\\\"\\n                        name=\\\"billing_state\\\">\\n                    </ion-input>\\n                </ion-item>\\n            </div>\\n\\n            <ion-item>\\n                <ion-label>{{\\\"Ship to different address\\\" | translate}}</ion-label>\\n                <ion-toggle color=\\\"{{settings.theme.button}}\\\" [(ngModel)]=\\\"checkoutData.form.ship_to_different_address\\\">\\n                </ion-toggle>\\n            </ion-item>\\n\\n\\n\\n        </ion-list>\\n\\n\\n        <ion-list no-margin *ngIf=\\\"checkoutData.form.ship_to_different_address\\\">\\n\\n            <ion-list-header>\\n                <ion-label>{{\\\"Shipping Address\\\" | translate}}</ion-label>\\n            </ion-list-header>\\n\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">{{\\\"First Name\\\" | translate}}</ion-label>\\n                <ion-input required type=\\\"text\\\" [(ngModel)]=\\\"checkoutData.form.shipping_first_name\\\" name=\\\"firstname\\\">\\n                </ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">{{\\\"Last Name\\\" | translate}}</ion-label>\\n                <ion-input required type=\\\"text\\\" [(ngModel)]=\\\"checkoutData.form.shipping_last_name\\\" name=\\\"lastname\\\">\\n                </ion-input>\\n            </ion-item>\\n            <ion-item style=\\\"display: none;\\\">\\n                <ion-label position=\\\"stacked\\\">{{\\\"Company\\\" | translate}}</ion-label>\\n                <ion-input required type=\\\"text\\\" value=\\\"none\\\" [(ngModel)]=\\\"checkoutData.form.shipping_company\\\" name=\\\"company\\\">\\n                </ion-input>\\n            </ion-item>\\n            <ion-item  style=\\\"display: none;\\\">\\n                <ion-label position=\\\"stacked\\\">{{\\\"Street Address\\\" | translate}}</ion-label>\\n                <ion-input required type=\\\"text\\\" value='none' [(ngModel)]=\\\"checkoutData.form.shipping_address_1\\\" name=\\\"street1\\\">\\n                </ion-input>\\n            </ion-item>\\n            <ion-item  style=\\\"display: none;\\\">\\n                <ion-label position=\\\"stacked\\\">{{\\\"Street Address\\\" | translate}} 2</ion-label>\\n                <ion-input required type=\\\"text\\\" value='none' [(ngModel)]=\\\"checkoutData.form.shipping_address_2\\\" name=\\\"street2\\\">\\n                </ion-input>\\n            </ion-item>\\n            <ion-item style=\\\"display: none;\\\">\\n                <ion-label position=\\\"stacked\\\">{{\\\"City\\\" | translate}}</ion-label>\\n                <ion-input required type=\\\"text\\\" value='none' [(ngModel)]=\\\"checkoutData.form.shipping_city\\\" name=\\\"city\\\"> </ion-input>\\n            </ion-item>\\n\\n            <ion-item style=\\\"display: none;\\\">\\n                <ion-label position=\\\"stacked\\\">{{\\\"Postcode\\\" | translate}}</ion-label>\\n                <ion-input required type=\\\"number\\\" value='00000' [(ngModel)]=\\\"checkoutData.form.shipping_postcode\\\" name=\\\"postcode\\\">\\n                </ion-input>\\n            </ion-item>\\n\\n\\n            <ion-item *ngIf=\\\"countries?.options\\\">\\n                <ion-label>{{\\\"Country\\\" | translate}}</ion-label>\\n                <ion-select [(ngModel)]=\\\"checkoutData.form.shipping_country\\\" (ngModelChange)=\\\"getShippingRegion()\\\"\\n                    name=\\\"shipping_country\\\">\\n                    <div *ngFor=\\\"let field of countries.options | keys\\\">\\n                        <ion-select-option value=\\\"{{field.key}}\\\"><span [innerHTML]=\\\"field.value\\\"></span>\\n                        </ion-select-option>\\n                    </div>\\n                </ion-select>\\n            </ion-item>\\n\\n            <div *ngIf=\\\"checkoutData.form?.shipping_country\\\">\\n                <ion-item *ngIf=\\\"checkoutData.form?.state[checkoutData.form.shipping_country]\\\">\\n                    <ion-label>{{\\\"State\\\" | translate}}</ion-label>\\n                    <ion-select [(ngModel)]=\\\"checkoutData.form.shipping_state\\\" name=\\\"shipping_state\\\">\\n                        <div *ngFor=\\\"let field of checkoutData.form.state[checkoutData.form.shipping_country] | keys\\\">\\n                            <ion-select-option value=\\\"{{field.key}}\\\"><span [innerHTML]=\\\"field.value\\\"></span>\\n                            </ion-select-option>\\n                        </div>\\n                    </ion-select>\\n                </ion-item>\\n\\n\\n                <ion-item *ngIf=\\\"!checkoutData.shippingStates\\\">\\n                    <ion-label position=\\\"stacked\\\">{{\\\"State\\\" | translate}}</ion-label>\\n                    <ion-input required type=\\\"text\\\" [(ngModel)]=\\\"checkoutData.form.shipping_state\\\"\\n                        name=\\\"shipping_state\\\"> </ion-input>\\n                </ion-item>\\n            </div>\\n\\n\\n        </ion-list>\\n\\n        <div *ngIf=\\\"errorMessage\\\">\\n            <h2 [innerHTML]=\\\"errorMessage\\\" style=\\\"font-size: 14px;  color: red;margin: 16px;\\\"></h2>\\n        </div>\\n\\n        <ion-button color=\\\"{{settings.theme.button}}\\\" expand=\\\"block\\\" fill=\\\"solid\\\" (click)=\\\"continueCheckout()\\\">\\n            {{\\\"Continue\\\" | translate}}</ion-button>\\n    </div>\\n\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoZWNrb3V0L2FkZHJlc3MvYWRkcmVzcy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../../api.service';\nimport { CheckoutData } from '../../data/checkout';\nimport { Settings } from './../../data/settings';\n\n@Component({\n    selector: 'app-address',\n    templateUrl: './address.page.html',\n    styleUrls: ['./address.page.scss'],\n})\nexport class CheckoutAddressPage implements OnInit {\n    errorMessage: any;\n    loader: boolean = false;\n    countries: any;\n    constructor(public api: ApiService, public checkoutData: CheckoutData, public router: Router, public navCtrl: NavController, public settings: Settings, public route: ActivatedRoute) {\n    }\n    ngOnInit() {\n        this.getCheckoutForm();\n        this.getCountries();\n    }\n    async getCheckoutForm() {\n        this.loader = true;\n        await this.api.postItem('get_checkout_form').subscribe(res => {\n            this.checkoutData.form = res;\n            this.checkoutData.form.sameForShipping = true;\n            this.getBillingRegion();\n            this.loader = false;\n        }, err => {\n            console.log(err);\n            this.loader = false;\n        });\n    }\n    getCountries() {\n        this.api.getItem('settings/general/woocommerce_specific_allowed_countries').subscribe(res => {\n            this.countries = res;\n        }, err => {\n            console.log(err);\n        });\n    }\n    getBillingRegion() {\n        if (this.checkoutData.form.state[this.checkoutData.form.billing_country] && 0 !== this.checkoutData.form.state[this.checkoutData.form.billing_country].length) this.checkoutData.billingStates = this.checkoutData.form.state[this.checkoutData.form.billing_country];\n        else this.checkoutData.billingStates = undefined;\n        //this.updateOrderReview();\n    }\n    getShippingRegion() {\n        if (this.checkoutData.form.state[this.checkoutData.form.shipping_country] && 0 !== this.checkoutData.form.state[this.checkoutData.form.shipping_country].length) this.checkoutData.shippingStates = this.checkoutData.form.state[this.checkoutData.form.shipping_country];\n        else this.checkoutData.shippingStates = undefined;\n        //this.updateOrderReview();\n    }\n    async updateOrderReview() {\n        await this.api.postItem('update_order_review').subscribe(res => {\n            this.checkoutData.orderReview = res;\n        }, err => {\n            console.log(err);\n        });\n    }\n\n    continueCheckout() {\n\n        this.errorMessage = '';\n\n        if (this.validateForm()) {\n            if (!this.checkoutData.form.ship_to_different_address)\n                this.assgnShippingAddress();\n            this.navCtrl.navigateForward('/tabs/cart/checkout');\n        }\n    }\n\n    validateForm() {\n        if (this.checkoutData.form.billing_first_name == '' || this.checkoutData.form.billing_first_name == undefined) {\n            this.errorMessage = 'Billing first name is a required field';\n            return false;\n        }\n\n        if (this.checkoutData.form.billing_last_name == '' || this.checkoutData.form.billing_last_name == undefined) {\n            this.errorMessage = 'Billing last name is a required field';\n            return false;\n        }\n\n        if (this.checkoutData.form.billing_phone == '' || this.checkoutData.form.billing_phone == undefined) {\n            this.errorMessage = 'Billing phone is a required field';\n            return false;\n        }\n\n        if (this.checkoutData.form.billing_address_1 == '' || this.checkoutData.form.billing_address_1 == undefined) {\n            this.errorMessage = 'Billing Street address is a required field';\n            return false;\n        }\n        this.checkoutData.form.billing_city='none';\n        if (this.checkoutData.form.billing_city == '' || this.checkoutData.form.billing_city == undefined) {\n            this.errorMessage = 'Billing city is a required field';\n            return false;\n        }\n        this.checkoutData.form.billing_postcode = '0000';\n        if (this.checkoutData.form.billing_postcode == '' || this.checkoutData.form.billing_postcode == undefined) {\n            this.errorMessage = 'Billing post code is a required field';\n            return false;\n        }\n       \n        if (this.checkoutData.form.billing_country == '' || this.checkoutData.form.billing_country == undefined) {\n            this.errorMessage = 'Billing country is a required field';\n            return false;\n        }\n        this.checkoutData.form.billing_state ='none';\n        if (this.checkoutData.form.billing_state == '' || this.checkoutData.form.billing_state == undefined) {\n            this.errorMessage = 'Billing state is a required field';\n            return false;\n        }\n\n        if (this.checkoutData.form.ship_to_different_address) {\n            if (this.checkoutData.form.shipping_first_name == '' || this.checkoutData.form.shipping_first_name == undefined) {\n                this.errorMessage = 'Shipping first name is a required field';\n                return false;\n            }\n\n            if (this.checkoutData.form.shipping_last_name == '' || this.checkoutData.form.shipping_last_name == undefined) {\n                this.errorMessage = 'Shipping last name is a required field';\n                return false;\n            }\n\n            if (this.checkoutData.form.shipping_address_1 == '' || this.checkoutData.form.shipping_address_1 == undefined) {\n                this.errorMessage = 'Shipping Street address is a required field';\n                return false;\n            }\n\n            if (this.checkoutData.form.shipping_city == '' || this.checkoutData.form.shipping_city == undefined) {\n                this.errorMessage = 'Shipping city is a required field';\n                return false;\n            }\n\n            if (this.checkoutData.form.shipping_postcode == '' || this.checkoutData.form.shipping_postcode == undefined) {\n                this.errorMessage = 'Shipping post code is a required field';\n                return false;\n            }\n\n            if (this.checkoutData.form.shipping_country == '' || this.checkoutData.form.shipping_country == undefined) {\n                this.errorMessage = 'Shipping country is a required field';\n                return false;\n            }\n\n            if (this.checkoutData.form.shipping_state == '' || this.checkoutData.form.shipping_state == undefined) {\n                this.errorMessage = 'Shipping state is a required field';\n                return false;\n            }\n            return true;\n        }\n\n        else return true;\n    }\n\n    assgnShippingAddress() {\n        this.checkoutData.form.shipping_first_name = this.checkoutData.form.billing_first_name;\n        this.checkoutData.form.shipping_last_name = this.checkoutData.form.billing_last_name;\n        this.checkoutData.form.shipping_company = this.checkoutData.form.billing_company;\n        this.checkoutData.form.shipping_address_1 = this.checkoutData.form.billing_address_1;\n        this.checkoutData.form.shipping_address_2 = this.checkoutData.form.billing_address_2;\n        this.checkoutData.form.shipping_city = this.checkoutData.form.billing_city;\n        this.checkoutData.form.shipping_postcode = this.checkoutData.form.billing_postcode;\n        this.checkoutData.form.shipping_country = this.checkoutData.form.billing_country;\n        this.checkoutData.form.shipping_state = this.checkoutData.form.billing_state;\n        return true;\n    }\n}"],"sourceRoot":""}