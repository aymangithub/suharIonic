{"version":3,"sources":["webpack:///./src/app/account/setting/setting.module.ts","webpack:///./src/app/account/setting/setting.page.html","webpack:///./src/app/account/setting/setting.page.scss","webpack:///./src/app/account/setting/setting.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AACV;AACA;AACS;AAEtD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;KACvB;CACF,CAAC;AAYF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAV7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,mEAAe;gBACf,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,yDAAW,CAAC;SAC5B,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB9B,qEAAqE,uBAAuB,uJAAuJ,yBAAyB,gXAAgX,uBAAuB,gDAAgD,kBAAkB,sDAAsD,oBAAoB,4GAA4G,uBAAuB,kEAAkE,uBAAuB,4D;;;;;;;;;;;ACA3/B,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;;;;;;ACArB;AACJ;AAC2B;AACV;AACR;AACN;AACQ;AACF;AACQ;AAOvD;IACE,qBAAmB,IAAc,EAAS,WAAwB,EAAS,MAAc,EAAS,QAAkB,EAAS,OAAsB,EAAS,gBAAkC,EAAS,aAA4B,EAAS,MAAc;QAAvO,SAAI,GAAJ,IAAI,CAAU;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,aAAQ,GAAR,QAAQ,CAAU;QAAS,YAAO,GAAP,OAAO,CAAe;QAAS,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAS,kBAAa,GAAb,aAAa,CAAe;QAAS,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAC7P,mCAAa,GAAb;QAAA,iBAgBC;QAfC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACvD,IAAG,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,EAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,KAAK,CAAC;SAC3B;;YAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,sBAAY;YACpD,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAChE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,EAAE,EAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAC,CAAC;aACrF,IAAI,CACH,cAAM,cAAO,CAAC,GAAG,EAAE,EAAb,CAAa,EACnB,eAAK,IAAI,cAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAApB,CAAoB,CAChC,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IACrB,CAAC;IAlBQ,WAAW;QALvB,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,uGAAkC;;SAEnC,CAAC;+EAEyB,wDAAQ,EAAsB,qDAAW,EAAiB,sDAAM,EAAmB,uDAAQ,EAAkB,4DAAa,EAA2B,oEAAgB,EAAwB,8EAAa,EAAiB,8CAAM;OAD/O,WAAW,CAqBvB;IAAD,kBAAC;CAAA;AArBuB","file":"account-setting-setting-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { SettingPage } from './setting.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    TranslateModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SettingPage]\n})\nexport class SettingPageModule {}\n","module.exports = \"<ion-header mode='ios'>\\n   <ion-toolbar color=\\\"{{settings.theme.header}}\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/tabs/account\\\"></ion-back-button>\\n    </ion-buttons>\\n      <ion-title>{{\\\"Setting\\\" | translate}}</ion-title>\\n   </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"settings\\\">\\n   <div *ngIf=\\\"settings.languages.length\\\">\\n      <ion-list >\\n         <ion-radio-group [(ngModel)]=\\\"config.lang\\\" name=\\\"language\\\" ngDefaultControl>\\n         <ion-item *ngFor=\\\"let item of settings.languages\\\">\\n            <ion-label class=\\\"payment-method-title\\\"><img src=\\\"{{item.country_flag_url}}\\\" width=\\\"20\\\"><span style=\\\"padding: 10px\\\">{{item.native_name}}</span></ion-label>\\n            <ion-radio value=\\\"{{item.language_code}}\\\"> </ion-radio>\\n         </ion-item>\\n         </ion-radio-group>\\n         <ion-button padding color=\\\"{{settings.theme.button}}\\\" expand=\\\"block\\\" fill=\\\"solid\\\" (click)=\\\"applyLanguage()\\\" >{{\\\"Apply\\\" | translate}}</ion-button>\\n      </ion-list>\\n   </div>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvc2V0dGluZy9zZXR0aW5nLnBhZ2Uuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport { Config } from '../../config';\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NavController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { Settings } from './../../data/settings';\nimport { HomePage} from '../../home/home.page';\nimport { Config as IonicConfig } from '@ionic/angular';\n\n@Component({\n  selector: 'app-setting',\n  templateUrl: './setting.page.html',\n  styleUrls: ['./setting.page.scss'],\n})\nexport class SettingPage {\n  constructor(public home: HomePage, public ionicConfig: IonicConfig, public router: Router, public settings: Settings, public navCtrl: NavController, public translateService: TranslateService, public nativeStorage: NativeStorage, public config: Config) { }\n    applyLanguage(){\n      this.translateService.setDefaultLang(this.config.lang);\n      if(this.config.lang == 'ar'){\n        this.settings.dir = 'rtl';\n      } else this.settings.dir = 'ltr';\n      this.translateService.get(['Back']).subscribe(translations => {\n            this.ionicConfig.set('backButtonText', translations['Back']);\n      });\n      document.documentElement.setAttribute('dir', this.settings.dir);\n      this.nativeStorage.setItem('settings', {lang: this.config.lang, dir: this.settings.dir})\n        .then(\n          () => console.log(),\n          error => console.error(error)\n      );\n      this.home.getBlocks();\n      this.navCtrl.pop();\n    }\n\n\n}\n"],"sourceRoot":""}